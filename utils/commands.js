var geoip = require('geoip-lite')

module.exports = (bot, con, mysql) => {
  bot.command('/info', (ctx) => {
    const getUser = async (userId) => {
      const response = await bot.execute('users.get', {
        user_ids: userId,
      })
      return response[0].first_name + ' ' + response[0].last_name
    }
    getUser(ctx.message.from_id).then(res => ctx.reply(`‚ùó @id${ctx.message.from_id}(${res}) —Å—É–¥—è –ø–æ –≤—Å–µ–º—É, –µ—Å–ª–∏ —è —Ç–µ–±–µ –æ—Ç–≤–µ—Ç–∏–ª, —Ç–æ —è —Ä–∞–±–æ—Ç–∞—é.`))
  })

  bot.command('/commands', (ctx) => {
    ctx.reply(`‚ùó –°–ø–∏—Å–æ–∫ –º–æ–∏—Ö –∫–æ–º–∞–Ω–¥:<br><br>` +
              `/info - –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –º–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ<br>` +
              `/commands - –°–ø–∏—Å–æ–∫ –º–æ–∏—Ö –∫–æ–º–∞–Ω–¥<br>` +
              `/ips {ip} - –°–ø–∏—Å–æ–∫ –≤—Å–µ—Ö –∞–∫–∫–∞—É–Ω—Ç–æ–≤ –Ω–∞ –∞–π–ø–∏ –∞–¥—Ä–µ—Å–µ<br>` +
              `/player {nickname|id} [1|–ü—É—Å—Ç–æ] - –£–∑–Ω–∞—Ç—å –æ—Å–Ω–æ–≤–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –ø—Ä–æ –∏–≥—Ä–æ–∫–∞, —Ç—Ä–µ—Ç–∏–π –ø–∞—Ä–∞–º–µ—Ç—Ä –æ–±—è–∑–∞—Ç–µ–ª–µ–Ω –µ—Å–ª–∏ –∏–¥–µ—Ç –ø–æ–∏—Å–∫ –ø–æ –Ω–∏–∫—É, –µ—Å–ª–∏ –ø–æ –∞–π–¥–∏, –º–æ–∂–Ω–æ –æ—Å—Ç–∞–≤–∏—Ç—å –ø—É—Å—Ç–æ–π`)
  })

  bot.command('/ips', (ctx) => {
    var text = (ctx.message.text).split(" ")
    if(text.length === 1) return ctx.reply(`‚ùó –í–≤–µ–¥–∏ –Ω–æ—Ä–º–∞–ª—å–Ω—ã–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã, –±—Ä–æ`)
    else {
      const query = `SELECT COUNT(\`id\`) as total FROM sessions WHERE \`ip\` = ${mysql.escape(text[1])}`
      try {
        const getIp = async (query) => {
          await con.query(query, function (err, result, fields) {

            const query = `SELECT sessions.user_id, accounts.nickname, accounts.balance FROM sessions JOIN accounts ON accounts.id = sessions.user_id WHERE \`ip\` = ${mysql.escape(text[1])}`
            const getIpMult = async (query) => {
              try {
                await con.query(query, function (err, res, fields) {
                  var data = `‚ùó –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –∞–∫–∫–∞—É–Ω—Ç–æ–≤ –Ω–∞ –¥–∞–Ω–Ω–æ–º IP: ${result[0].total} <br>–ú—É–ª—å—Ç–∏–∞–∫–∫–∞—É–Ω—Ç—ã: <br><br>`
                  var acc = 1
                  for(var i = 0; i < res.length; i++) data += `  ${acc++}. ${res[i].nickname}(#${res[i].user_id}) - ${res[i].balance} ‚ÇΩ <br>`
                  var geo = geoip.lookup(text[1])
                  ctx.reply(data + `<br>–î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ–± –∞–π–ø–∏ –∞–¥—Ä–µ—Å–µ:<br><br> –°—Ç—Ä–∞–Ω–∞: ${geo.country}<br>–†–µ–≥–∏–æ–Ω: ${geo.region}<br>–¢–∞–π–º–∑–æ–Ω–∞: ${geo.timezone}<br>–ì–æ—Ä–æ–¥: ${geo.city}`)
                })
              }
              catch(e) {
                ctx.reply(`‚ùó –Ø –Ω–µ —Å–º–æ–≥ –Ω–∞–π—Ç–∏ –º—É–ª—å—Ç–∏–∞–∫–∫–∞—É–Ω—Ç—ã –≤ —Å–≤–æ–µ–π –∑–∞–ø–∏—Å–Ω–æ–π –∫–Ω–∏–∂–∫–µ`)
              }
            }
            getIpMult(query)

          })
        }
        getIp(query)
      } catch(e) {
        ctx.reply(`‚ùó –Ø –Ω–µ —Å–º–æ–≥ –Ω–∞–π—Ç–∏ –º—É–ª—å—Ç–∏–∞–∫–∫–∞—É–Ω—Ç—ã –≤ —Å–≤–æ–µ–π –∑–∞–ø–∏—Å–Ω–æ–π –∫–Ω–∏–∂–∫–µ`)
      }
    }
  })

  bot.command('/player', (ctx) => {
    var text = (ctx.message.text).split(" ")

    if(text.length === 1) return ctx.reply(`‚ùó –í–≤–µ–¥–∏ –Ω–æ—Ä–º–∞–ª—å–Ω—ã–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã, –±—Ä–æ`)
    else {
      if(parseInt(text[2]) === 1) {
        const query = `SELECT accounts.id, accounts.nickname, accounts.email, accounts.balance, accounts.avatar_url, accounts.promo_id, sessions.ip FROM accounts JOIN sessions ON accounts.id = sessions.user_id WHERE \`nickname\` = ${mysql.escape(text[1])}`
        try {
          con.query(query, function (err, result, fields) {
            if(result[0] === undefined) return ctx.reply(`‚ùó –Ø –Ω–µ —Å–º–æ–≥ –Ω–∞–π—Ç–∏ –Ω—É–∂–Ω—ã–π –∞–∫–∫–∞—É–Ω—Ç –≤ —Å–≤–æ–µ–π –∑–∞–ø–∏—Å–Ω–æ–π –∫–Ω–∏–∂–∫–µ`)
            if(err) return ctx.reply(`‚ùó –Ø –Ω–µ —Å–º–æ–≥ –Ω–∞–π—Ç–∏ –Ω—É–∂–Ω—ã–π –∞–∫–∫–∞—É–Ω—Ç –≤ —Å–≤–æ–µ–π –∑–∞–ø–∏—Å–Ω–æ–π –∫–Ω–∏–∂–∫–µ`)

            const query = `SELECT COUNT(\`id\`) as total FROM sessions WHERE \`ip\` = ${mysql.escape(result[0].ip)}`
            con.query(query, function (err, res, fields) {
              return ctx.reply(`‚ùó –°–µ–∫—É–Ω–¥–æ—á–∫—É, –ø—Ä–æ–≤–æ–∂—É –ø–æ–∏—Å–∫ –≤ —Å–≤–æ–µ–π –∑–∞–ø–∏—Å–Ω–æ–π –∫–Ω–∏–∂–∫–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –ø–æ –∞–π–¥–∏ –∏–≥—Ä–æ–∫—É #${result[0].id}<br><br>` +
                        `ü§† –ù–∏–∫: ${result[0].nickname} (#${result[0].id})<br>` +
                        `üí¨ –ü–æ—á—Ç–∞: ` + ((result[0].email !== null) ? `${result[0].email}` : `–ù–ï–¢`) + `<br>` +
                        `ü§ë –°–æ—Å—Ç–æ—è–Ω–∏–µ —Å—á–µ—Ç–∞: ${result[0].balance} ‚ÇΩ<br>` +
                        `ü§ñ –ê–≤–∞—Ç–∞—Ä–∫–∞: ${result[0].avatar_url} <br>` +
                        `‚ôª –ü—Ä–æ–º–æ–∫–æ–¥: ` + ((result[0].promo_id !== null) ? `#${result[0].promo_id}` : `–ù–ï–¢`) + `<br>` +
                        `ü§ñ IP –ò–≥—Ä–æ–∫–∞: ${result[0].ip} <br>` +
                        `ü§ñ –í—Å–µ–≥–æ –∞–∫–∫–∞—É–Ω—Ç–æ–≤: ${res[0].total} <br>`)
            })
          })
        } catch(e) {
          ctx.reply(`‚ùó –Ø –Ω–µ —Å–º–æ–≥ –Ω–∞–π—Ç–∏ –Ω—É–∂–Ω—ã–π –∞–∫–∫–∞—É–Ω—Ç –≤ —Å–≤–æ–µ–π –∑–∞–ø–∏—Å–Ω–æ–π –∫–Ω–∏–∂–∫–µ`)
        }
      }
      else {
        if(parseInt(text[1]) <= 0) return ctx.reply('–û—à–∏–±–æ—á–∫–∞, —á–∏—Å–ª–æ –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å –±–æ–ª—å—à–µ –Ω—É–ª—è')

        const query = `SELECT accounts.id, accounts.nickname, accounts.email, accounts.balance, accounts.avatar_url, accounts.promo_id, sessions.ip FROM accounts JOIN sessions ON accounts.id = sessions.user_id WHERE accounts.id = ${mysql.escape(text[1])}`
        try {
          con.query(query, function (err, result, fields) {
            if(result[0] === undefined) return ctx.reply(`‚ùó –Ø –Ω–µ —Å–º–æ–≥ –Ω–∞–π—Ç–∏ –Ω—É–∂–Ω—ã–π –∞–∫–∫–∞—É–Ω—Ç –≤ —Å–≤–æ–µ–π –∑–∞–ø–∏—Å–Ω–æ–π –∫–Ω–∏–∂–∫–µ`)
            if(err) return ctx.reply(`‚ùó –Ø –Ω–µ —Å–º–æ–≥ –Ω–∞–π—Ç–∏ –Ω—É–∂–Ω—ã–π –∞–∫–∫–∞—É–Ω—Ç –≤ —Å–≤–æ–µ–π –∑–∞–ø–∏—Å–Ω–æ–π –∫–Ω–∏–∂–∫–µ`)
            const query = `SELECT COUNT(\`id\`) as total FROM sessions WHERE \`ip\` = ${mysql.escape(result[0].ip)}`
            con.query(query, function (err, res, fields) {
              return ctx.reply(`‚ùó –°–µ–∫—É–Ω–¥–æ—á–∫—É, –ø—Ä–æ–≤–æ–∂—É –ø–æ–∏—Å–∫ –≤ —Å–≤–æ–µ–π –∑–∞–ø–∏—Å–Ω–æ–π –∫–Ω–∏–∂–∫–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –ø–æ –∞–π–¥–∏ –∏–≥—Ä–æ–∫—É #${text[1]}<br><br>` +
                        `ü§† –ù–∏–∫: ${result[0].nickname} (#${result[0].id})<br>` +
                        `üí¨ –ü–æ—á—Ç–∞: ` + ((result[0].email !== null) ? `${result[0].email}` : `–ù–ï–¢`) + `<br>` +
                        `ü§ë –°–æ—Å—Ç–æ—è–Ω–∏–µ —Å—á–µ—Ç–∞: ${result[0].balance} ‚ÇΩ<br>` +
                        `ü§ñ –ê–≤–∞—Ç–∞—Ä–∫–∞: ${result[0].avatar_url} <br>` +
                        `‚ôª –ü—Ä–æ–º–æ–∫–æ–¥: ` + ((result[0].promo_id !== null) ? `#${result[0].promo_id}` : `–ù–ï–¢`) + `<br>` +
                        `ü§ñ IP –ò–≥—Ä–æ–∫–∞: ${result[0].ip} <br>` +
                        `ü§ñ –í—Å–µ–≥–æ –∞–∫–∫–∞—É–Ω—Ç–æ–≤: ${res[0].total} <br>`)
            })
          })
        } catch(e) {
          ctx.reply(`‚ùó –Ø –Ω–µ —Å–º–æ–≥ –Ω–∞–π—Ç–∏ –Ω—É–∂–Ω—ã–π –∞–∫–∫–∞—É–Ω—Ç –≤ —Å–≤–æ–µ–π –∑–∞–ø–∏—Å–Ω–æ–π –∫–Ω–∏–∂–∫–µ`)
        }
      }
    }
  })
}
